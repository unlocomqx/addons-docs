(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{217:function(e,t,i){"use strict";i.r(t);var o=i(6),l=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"carrier-filtering"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#carrier-filtering"}},[e._v("#")]),e._v(" Carrier filtering")]),e._v(" "),t("p",[e._v("You can filter carriers based on the module fields."),t("br"),e._v("\nFor this to work, you need to use the following standard names for your fields:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("width")])]),e._v(" "),t("li",[t("code",[e._v("height")])]),e._v(" "),t("li",[t("code",[e._v("depth")])])]),e._v(" "),t("p",[e._v("Then the module will pass the values of these fields to PrestaShop so that it can filter the carriers correctly."),t("br"),e._v("\nThese standard names will only work if your fields units are the same as the "),t("code",[e._v("Dimension unit")]),e._v(" that is configured in the "),t("code",[e._v("Localization")]),e._v(" page")]),e._v(" "),t("p",[e._v("If the field unit is "),t("code",[e._v("millimeters")]),e._v(" then you can suffix the field name with "),t("code",[e._v("_mm")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("width_mm")])]),e._v(" "),t("li",[t("code",[e._v("height_mm")])]),e._v(" "),t("li",[t("code",[e._v("depth_mm")])])]),e._v(" "),t("p",[e._v("If the field unit is "),t("code",[e._v("meters")]),e._v(" then you can suffix the field name with "),t("code",[e._v("_m")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("width_m")])]),e._v(" "),t("li",[t("code",[e._v("height_m")])]),e._v(" "),t("li",[t("code",[e._v("depth_m")])])]),e._v(" "),t("p",[e._v("The module will detect these suffixes and will convert the values to "),t("code",[e._v("cm")]),e._v(" before passing them to PrestaShop")])])}),[],!1,null,null,null);t.default=l.exports}}]);